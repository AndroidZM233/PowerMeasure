package speedata.com.powermeasure.activity;

import android.content.Context;
import android.os.Handler;
import android.os.Message;
import android.view.View;
import android.view.WindowManager;

import com.alibaba.fastjson.JSON;

import org.androidannotations.annotations.AfterViews;
import org.androidannotations.annotations.EActivity;
import org.androidannotations.annotations.ViewById;

import java.util.List;

import common.base.App;
import common.base.act.FragActBase;
import common.event.ViewMessage;
import common.http.MResponse;
import common.http.MResponseListener;
import common.view.CustomTitlebar;
import common.webserice.WebService;
import speedata.com.powermeasure.R;
import speedata.com.powermeasure.bean.RegularListClass;
import speedata.com.powermeasure.constant.Constants;
import speedata.com.powermeasure.model.WebModel;

@EActivity(R.layout.activity_regularl)
public class RegularlAct extends FragActBase {
    private static final int RE_LIST_SUCCESS = 0;
    @ViewById
    CustomTitlebar titlebar;
    private List<RegularListClass.REGULARLISTBean> regular_list;

    Handler handler=new Handler(){
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            switch (msg.what){
                case RE_LIST_SUCCESS:
                    break;
            }
        }
    };
    @AfterViews
    protected void main() {
        getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);
        App.getInstance().addActivity(RegularlAct.this);
        initTitlebar();
        setSwipeEnable(false);
        DoGetReList();
    }

    private void DoGetReList() {
        //定期维保列表查询
        showToast("查询中...");
        WebModel.getInstance().getAlarmlList(new MResponseListener() {
            @Override
            public void onSuccess(MResponse response) {
                String callWebService = String.valueOf(response.data);
                List<RegularListClass> regularListClasses = JSON.parseArray(
                        callWebService, RegularListClass.class);
                RegularListClass regularListClass = regularListClasses.get(0);
                String rt_f = regularListClass.getRT_F();
                if (rt_f.equals("1")){
                    regular_list = regularListClass.getREGULAR_LIST();
                    Message message=new Message();
                    message.what=RE_LIST_SUCCESS;
                    handler.sendMessage(message);
                }else {
                    showToast("查询失败，"+regularListClass.getRT_D());
                    finish();
                }
                hideLoading();
            }

            @Override
            public void onError(final MResponse response) {
                runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        if (response.msg != null) {
                            showToast(response.msg.toString());
                        }else {
                            showToast("出错了！");
                        }
                        hideLoading();
                    }
                });
            }
        },getXml("2PROC_CODE", ""),getXml("OPER_NO", ""));
    }

    @Override
    protected Context regieterBaiduBaseCount() {
        return null;
    }

    @Override
    protected void initTitlebar() {
        titlebar.setTitlebarStyle(CustomTitlebar.TITLEBAR_STYLE_NORMAL);
        titlebar.setAttrs(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        }, "定期维保", null);
    }

    @Override
    public void onEventMainThread(ViewMessage viewMessage) {

    }
}
