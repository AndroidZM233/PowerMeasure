//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.2.
//


package speedata.com.powermeasure.activity;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.TextView;
import common.view.CustomTitlebar;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;
import speedata.com.powermeasure.R.id;
import speedata.com.powermeasure.R.layout;

public final class InspSecondAct_
    extends InspSecondAct
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private final IntentFilter intentFilter1_ = new IntentFilter();
    private final BroadcastReceiver receivedConnectivityReceiver_ = new BroadcastReceiver() {


        public void onReceive(Context context, Intent intent) {
            InspSecondAct_.this.receivedConnectivity(intent);
        }

    }
    ;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_insp_second);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        requestWindowFeature(1);
        intentFilter1_.addAction("android.net.conn.CONNECTIVITY_CHANGE");
        this.registerReceiver(receivedConnectivityReceiver_, intentFilter1_);
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static InspSecondAct_.IntentBuilder_ intent(Context context) {
        return new InspSecondAct_.IntentBuilder_(context);
    }

    public static InspSecondAct_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new InspSecondAct_.IntentBuilder_(fragment);
    }

    public static InspSecondAct_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new InspSecondAct_.IntentBuilder_(supportFragment);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        btn_inspSecond_trouble = ((Button) hasViews.findViewById(id.btn_inspSecond_trouble));
        titlebar = ((CustomTitlebar) hasViews.findViewById(id.titlebar));
        tv_inspSecond_time = ((TextView) hasViews.findViewById(id.tv_inspSecond_time));
        cb_inspSecond_3 = ((CheckBox) hasViews.findViewById(id.cb_inspSecond_3));
        cb_inspSecond_1 = ((CheckBox) hasViews.findViewById(id.cb_inspSecond_1));
        btn_inspSecond_fankui = ((Button) hasViews.findViewById(id.btn_inspSecond_fankui));
        tv_inspSecond_nowtime = ((TextView) hasViews.findViewById(id.tv_inspSecond_nowtime));
        tv_inspSecond_name = ((TextView) hasViews.findViewById(id.tv_inspSecond_name));
        cb_inspSecond_2 = ((CheckBox) hasViews.findViewById(id.cb_inspSecond_2));
        if (btn_inspSecond_fankui!= null) {
            btn_inspSecond_fankui.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    InspSecondAct_.this.btn_inspSecond_fankui();
                }

            }
            );
        }
        if (btn_inspSecond_trouble!= null) {
            btn_inspSecond_trouble.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    InspSecondAct_.this.btn_inspSecond_trouble();
                }

            }
            );
        }
        main();
    }

    @Override
    public void onDestroy() {
        this.unregisterReceiver(receivedConnectivityReceiver_);
        super.onDestroy();
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<InspSecondAct_.IntentBuilder_>
    {

        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, InspSecondAct_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), InspSecondAct_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), InspSecondAct_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent, requestCode);
                } else {
                    super.startForResult(requestCode);
                }
            }
        }

    }

}
